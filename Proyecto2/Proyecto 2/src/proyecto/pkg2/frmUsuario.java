/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto.pkg2;

import java.awt.Image;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author braya
 */
public class frmUsuario extends javax.swing.JFrame {
    AB abbglobal = new AB(); 
    AB abbglobalparaAVL = new AB();
    Arbol_AVL AVLglobal = new Arbol_AVL();
    public static DefaultMutableTreeNode root;
    public static DefaultTreeModel modelo;
    public frmUsuario() {
        initComponents();
    }
    public static void crear(DefaultMutableTreeNode nodo,File carpeta){
    File[] archivos = carpeta.listFiles();
    if(archivos != null){
        int contador = 0;
        for(File f:archivos){
            DefaultMutableTreeNode hijo = new DefaultMutableTreeNode(f.getAbsolutePath());
            modelo.insertNodeInto(hijo, nodo, contador);
            contador++;
            if(f.isDirectory()){
               crear(hijo,f);
                }
        
        }
        
    }else{
                System.out.println("No tiene hijos");
                }
    }
  
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Grupo1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        lblImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaSalida = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnradiopreOrden = new javax.swing.JRadioButton();
        btnradioInOrden = new javax.swing.JRadioButton();
        btnradioPostOrden = new javax.swing.JRadioButton();
        txtSalida = new javax.swing.JTextField();
        txtOriginal = new javax.swing.JTextField();
        txtNumeroCapas = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtIdImagen = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtidCapa = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtIdImg = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        txtingresoid = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        BtnActualizar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        txtfileruta = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtidAmplitud = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("REPORTES DE LAS ESTRUCTURAS");

        jButton1.setText("Cargar Capas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtAreaSalida.setColumns(20);
        txtAreaSalida.setRows(5);
        jScrollPane1.setViewportView(txtAreaSalida);

        jButton2.setText("Cargar Imagenes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Cargar Albumes");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("4.1.1 Por recorrido de Imagenes   --------------------------------------------------------------------------");

        jLabel4.setText("Ingrese el numero de capas:");

        jLabel5.setText("Seleccionar Recorrido:");

        Grupo1.add(btnradiopreOrden);
        btnradiopreOrden.setText("PreOrden");

        Grupo1.add(btnradioInOrden);
        btnradioInOrden.setText("InOrden");

        Grupo1.add(btnradioPostOrden);
        btnradioPostOrden.setText("PostOrden");

        txtSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalidaActionPerformed(evt);
            }
        });

        jLabel6.setText("Recorrido Salida");

        jLabel8.setText("Recorrido Capas");

        jLabel9.setText("4.1.2 Por Arbol de Imagenes ------------------------------------------------------------------------------");

        jLabel10.setText("Ingresar id Imagen");

        txtIdImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdImagenActionPerformed(evt);
            }
        });

        jLabel11.setText("Ingresar id Capa");

        jLabel12.setText("Ingrese el id  de la imagen");

        txtIdImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdImgActionPerformed(evt);
            }
        });

        jButton4.setText("Ingresar por recorrido");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtingresoid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtingresoidActionPerformed(evt);
            }
        });

        jButton5.setText("Ingresar Por Arbol");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        BtnActualizar.setText("Actualizar");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });

        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTree1);

        jButton6.setText("Mostrar Imagen");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setText("4.1.2 Por Arbol de Imagenes");

        jButton7.setText("Generar en Amplitud");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel7.setText("Ingrese ID imagen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(BtnActualizar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtfileruta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(80, 80, 80)
                                .addComponent(jButton2)
                                .addGap(77, 77, 77)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(25, 25, 25)
                                                .addComponent(txtOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton4))
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel12)
                                                .addGap(40, 40, 40)
                                                .addComponent(txtIdImg, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4)
                                                .addGap(30, 30, 30)
                                                .addComponent(txtNumeroCapas, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnradioInOrden)
                                                .addGap(26, 26, 26)
                                                .addComponent(btnradioPostOrden)))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnradiopreOrden))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtingresoid, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtidCapa, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2))))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(txtIdImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel7)
                        .addGap(34, 34, 34)
                        .addComponent(txtidAmplitud, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtIdImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroCapas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnradioInOrden)
                            .addComponent(btnradioPostOrden)
                            .addComponent(btnradiopreOrden))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtOriginal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtingresoid, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtidCapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(64, 64, 64))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtidAmplitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(260, 260, 260)
                                .addComponent(txtIdImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(txtfileruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(BtnActualizar)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Lectura_Json lectura = new Lectura_Json();
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".JSON","json");
        fc.setFileFilter(filtro);
        int seleccion = fc.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fc.getSelectedFile();
           try ( FileReader fr = new FileReader(archivo)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                this.txtAreaSalida.setText(archivo.toString());
                abbglobal = lectura.LeerCapas(cadena);
                
                String part1 = abbglobal.textoGraph(abbglobal.raiz);
                String part2 = abbglobal.InOrderGraph(abbglobal.raiz);
                String completo = abbglobal.ArmarEstructura(part2, part1);
                abbglobal.CrearEstructura(completo,"ABB"+archivo.getName().toString());
                abbglobal.ConvertimosGraphviz("ABB"+archivo.getName().toString(), "ABB"+archivo.getName().toString());
                
                
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Lectura_Json lectura = new Lectura_Json();
        JFileChooser fc = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".JSON","json");
        fc.setFileFilter(filtro);
        int seleccion = fc.showOpenDialog(this);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File archivo = fc.getSelectedFile();
           try ( FileReader fr = new FileReader(archivo)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                this.txtAreaSalida.setText(archivo.toString());
                System.out.println("########################");
                abbglobal.InOrderMat(abbglobal.raiz);
                System.out.println("########################");
                
                
                AVLglobal = lectura.LeerImagenesUser(cadena, abbglobal);
                
                String parte1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
                String parte2 = AVLglobal.textoGraph(AVLglobal.raiz);
                String completo = AVLglobal.ArmarEstructura(parte1, parte2);
                
                AVLglobal.CrearEstructura(completo,"AVL"+archivo.getName().toString());
                
                AVLglobal.ConvertimosGraphviz("AVL"+archivo.getName().toString(),"AVL"+archivo.getName().toString());
                
                System.out.println("-------Generamos las imagenes--------");
                AVLglobal.GenerarImagenes(AVLglobal.raiz);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         Lectura_Json lectura = new Lectura_Json();
        JFileChooser fc = new JFileChooser();

        FileNameExtensionFilter filtro = new FileNameExtensionFilter(".JSON","json");

        fc.setFileFilter(filtro);

        int seleccion = fc.showOpenDialog(this);

        if (seleccion == JFileChooser.APPROVE_OPTION) {

            File archivo = fc.getSelectedFile();

           try ( FileReader fr = new FileReader(archivo)) {
                String cadena = "";
                int valor = fr.read();
                while (valor != -1) {
                    cadena = cadena + (char) valor;
                    valor = fr.read();
                }
                String retorno = lectura.LeerAlbum(cadena);
                this.txtAreaSalida.setText(retorno);
                
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtIdImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdImagenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdImagenActionPerformed

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed
      //Primero creamos un archivo que sera el directorio actual donde estamos
    
    File directorio = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas");
    if(!directorio.exists()){
    directorio.mkdir();
    }
    File directorio2 = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas\\Imagenes");
    if(!directorio2.exists()){
    directorio2.mkdir();
    }
    File directorio3 = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas\\GraphABB");
    if(!directorio3.exists()){
    directorio3.mkdir();
    }
    File directorio4 = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas\\GraphAVL");
    if(!directorio4.exists()){
    directorio4.mkdir();
    }
    File directorio5 = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas\\Matrix");
    if(!directorio5.exists()){
    directorio5.mkdir();
    }
    File directorio6 = new File("C:\\Users\\braya\\OneDrive\\Escritorio\\Salidas\\ArbolB");
    if(!directorio6.exists()){
    directorio6.mkdir();
    }
   
      
      File directorio1 = new File("C:/Users/braya/OneDrive/Escritorio/Salidas");
      //Creamos el nodo raíz y el DefaultTreeModel
      root = new DefaultMutableTreeNode(directorio.getName());
      modelo = new DefaultTreeModel(root);
      crear(root,directorio);
      jTree1.setModel(modelo);      
       
    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
      DefaultMutableTreeNode NodoSeleccionado = (DefaultMutableTreeNode) jTree1.getSelectionPath().getLastPathComponent();
      this.txtfileruta.setText(NodoSeleccionado.getUserObject().toString());
    }//GEN-LAST:event_jTree1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ImageIcon imagen;
        Icon icono;
        String ruta = this.txtfileruta.getText();
        
        imagen = new ImageIcon(ruta);
        icono = new  ImageIcon(imagen.getImage().getScaledInstance(lblImage.getWidth(),lblImage.getHeight(),Image.SCALE_DEFAULT)); 
        this.lblImage.setIcon(icono);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtIdImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdImgActionPerformed
     
                
    }//GEN-LAST:event_txtIdImgActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         AB arbolporRecorrido = new AB();
        AB copyabbglobal = abbglobal;
        
        
        
        if(this.btnradioInOrden.isSelected()){
            
            String Id = this.txtIdImg.getText();
            int IdImagen = Integer.parseInt(Id); 
            
            String nCapas = this.txtNumeroCapas.getText();
            int numCapas = Integer.parseInt(nCapas); 
            String scan1 = copyabbglobal.InOrder(copyabbglobal.raiz);
            String[] code = scan1.split(",");
             MD entrada = new MD();
            for(int a = 0; a<numCapas;a++){
     
        int index = Integer.parseInt(code[a].toString());
        Nodo__AB retorno = copyabbglobal.BuscarNodoW(index,copyabbglobal.raiz);
        arbolporRecorrido.agregarNodo(index,"Capa"+index, retorno.MatrizCapa);
        entrada = retorno.MatrizCapa.CreateSuperM(entrada);
      }
      //graficamos la matriz unida
      String part1 = entrada.GraphInit();
      String part2 = entrada.GraphColumna();
      String part3 = entrada.GraphFilas();
      String todo = entrada.CreateDot(part1, part2, part3);
      entrada.CrearEstructuraImg(todo,"Imagen-por-Recorrido-in"+IdImagen);
      entrada.ConvertimosGraphvizImg("Imagen-por-Recorrido-in"+IdImagen,"Imagen-por-Recorrido-in"+IdImagen);
      // ingresamos en el avl y lo graficamos
      AVLglobal.add(IdImagen,arbolporRecorrido);
      String combo1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
      String combo2 = AVLglobal.textoGraph(AVLglobal.raiz);
      String combinado = AVLglobal.ArmarEstructura(combo1, combo2);
      AVLglobal.CrearEstructura(combinado,"AVL-Imagen-Recorrido-in"+IdImagen);
      AVLglobal.ConvertimosGraphviz("AVL-Imagen-Recorrido-in"+IdImagen,"AVL-Imagen-Recorrido-in"+IdImagen);
        
      String enordenRecorrido = arbolporRecorrido.InOrder(arbolporRecorrido.raiz);
        this.txtSalida.setText(enordenRecorrido);  
      
      String enordenOriginal = copyabbglobal.InOrder(copyabbglobal.raiz);
        this.txtOriginal.setText(enordenOriginal);
        
        
         
        }else if(this.btnradiopreOrden.isSelected()){
            String Id = this.txtIdImg.getText();
            int IdImagen = Integer.parseInt(Id); 
            
            String nCapas = this.txtNumeroCapas.getText();
            int numCapas = Integer.parseInt(nCapas); 
            String scan1 = copyabbglobal.PreOrder(copyabbglobal.raiz);
            String[] code = scan1.split(",");
             MD entrada = new MD();
            for(int a = 0; a<numCapas;a++){
     
        int index = Integer.parseInt(code[a].toString());
        Nodo__AB retorno = copyabbglobal.BuscarNodoW(index,copyabbglobal.raiz);
        arbolporRecorrido.agregarNodo(index,"Capa"+index, retorno.MatrizCapa);
        entrada = retorno.MatrizCapa.CreateSuperM(entrada);
      }
      //graficamos la matriz unida
      String part1 = entrada.GraphInit();
      String part2 = entrada.GraphColumna();
      String part3 = entrada.GraphFilas();
      String todo = entrada.CreateDot(part1, part2, part3);
      entrada.CrearEstructuraImg(todo,"Imagen-por-Recorrido-pre"+IdImagen);
      entrada.ConvertimosGraphvizImg("Imagen-por-Recorrido-pre"+IdImagen,"Imagen-por-Recorrido-pre"+IdImagen);
      // ingresamos en el avl y lo graficamos
      AVLglobal.add(IdImagen,arbolporRecorrido);
      String combo1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
      String combo2 = AVLglobal.textoGraph(AVLglobal.raiz);
      String combinado = AVLglobal.ArmarEstructura(combo1, combo2);
      AVLglobal.CrearEstructura(combinado,"AVL-Imagen-Recorrido-pre"+IdImagen);
      AVLglobal.ConvertimosGraphviz("AVL-Imagen-Recorrido-pre"+IdImagen,"AVL-Imagen-Recorrido-pre"+IdImagen);
        
      String enordenRecorrido = arbolporRecorrido.PreOrder(arbolporRecorrido.raiz);
        this.txtSalida.setText(enordenRecorrido); 
            
            
        
        String preordenOriginal = copyabbglobal.PreOrder(copyabbglobal.raiz);
        this.txtOriginal.setText(preordenOriginal);
        
        }else if(this.btnradioPostOrden.isSelected()){
            String Id = this.txtIdImg.getText();
            int IdImagen = Integer.parseInt(Id); 
            
            String nCapas = this.txtNumeroCapas.getText();
            int numCapas = Integer.parseInt(nCapas); 
            String scan1 = copyabbglobal.PostOrder(copyabbglobal.raiz);
            String[] code = scan1.split(",");
             MD entrada = new MD();
            for(int a = 0; a<numCapas;a++){
     
        int index = Integer.parseInt(code[a].toString());
        Nodo__AB retorno = copyabbglobal.BuscarNodoW(index,copyabbglobal.raiz);
        arbolporRecorrido.agregarNodo(index,"Capa"+index, retorno.MatrizCapa);
        entrada = retorno.MatrizCapa.CreateSuperM(entrada);
      }
      //graficamos la matriz unida
      String part1 = entrada.GraphInit();
      String part2 = entrada.GraphColumna();
      String part3 = entrada.GraphFilas();
      String todo = entrada.CreateDot(part1, part2, part3);
      entrada.CrearEstructuraImg(todo,"Imagen-por-Recorrido-post"+IdImagen);
      entrada.ConvertimosGraphvizImg("Imagen-por-Recorrido-post"+IdImagen,"Imagen-por-Recorrido-post"+IdImagen);
      // ingresamos en el avl y lo graficamos
      AVLglobal.add(IdImagen,arbolporRecorrido);
      String combo1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
      String combo2 = AVLglobal.textoGraph(AVLglobal.raiz);
      String combinado = AVLglobal.ArmarEstructura(combo1, combo2);
      AVLglobal.CrearEstructura(combinado,"AVL-Imagen-Recorrido-post"+IdImagen);
      AVLglobal.ConvertimosGraphviz("AVL-Imagen-Recorrido-post"+IdImagen,"AVL-Imagen-Recorrido-post"+IdImagen);
        
      String enordenRecorrido = arbolporRecorrido.PostOrder(arbolporRecorrido.raiz);
        this.txtSalida.setText(enordenRecorrido); 
            
            
            
        String postordenOriginal = copyabbglobal.PostOrder(copyabbglobal.raiz);
        this.txtOriginal.setText(postordenOriginal);
        }else{
        JOptionPane.showMessageDialog(null,"Debe marcar los radios buttons");
        }
      
     
      
      
      
      
      
      
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        AB arbolPorCapas = new AB();
      AB copyabbglobal = abbglobal;
      String Numero_ID = this.txtingresoid.getText();
      int idImagen = Integer.parseInt(Numero_ID);
      String Numero_Capas = this.txtidCapa.getText();
      String[] code = Numero_Capas.split(",");
      MD entrada = new MD();
      for (int z  = 0; z<code.length;z++){
            int index = Integer.parseInt(code[z].toString());
        Nodo__AB retorno = copyabbglobal.BuscarNodoW(index,copyabbglobal.raiz);
        arbolPorCapas.agregarNodo(index,"Capa"+index, retorno.MatrizCapa);
        entrada = retorno.MatrizCapa.CreateSuperM(entrada);
      }
      //graficamos la matriz unida
      String part1 = entrada.GraphInit();
      String part2 = entrada.GraphColumna();
      String part3 = entrada.GraphFilas();
      String todo = entrada.CreateDot(part1, part2, part3);
      entrada.CrearEstructuraImg(todo,"Imagen-grupos"+idImagen);
      entrada.ConvertimosGraphvizImg("Imagen-grupos"+idImagen,"Imagen-grupos"+idImagen);
      // ingresamos en el avl y lo graficamos
      AVLglobal.add(idImagen,arbolPorCapas);
      String combo1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
      String combo2 = AVLglobal.textoGraph(AVLglobal.raiz);
      String combinado = AVLglobal.ArmarEstructura(combo1, combo2);
      AVLglobal.CrearEstructura(combinado,"AVL-Imagen-grupos"+idImagen);
      AVLglobal.ConvertimosGraphviz("AVL-Imagen-grupos"+idImagen,"AVL-Imagen-grupos"+idImagen);
      
      
      
      
      
    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtingresoidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtingresoidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtingresoidActionPerformed

    private void txtSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalidaActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
     AB copyabbglobal =  abbglobal;
     AB arbolporAmplitud = new AB();
     String obtenerid = this.txtidAmplitud.getText();
     int idImagen = Integer.parseInt(obtenerid);
     String obtenerIndex = copyabbglobal.PreOrder(copyabbglobal.raiz);
      String[] code = obtenerIndex.split(",");
      MD entrada = new MD();
      for (int b  = 0; b<code.length;b++){
            int index = Integer.parseInt(code[b].toString());
        Nodo__AB retorno = copyabbglobal.BuscarNodoW(index,copyabbglobal.raiz);
        arbolporAmplitud.agregarNodo(index,"Capa"+index, retorno.MatrizCapa);
        entrada = retorno.MatrizCapa.CreateSuperM(entrada);
      }
      //graficamos la matriz unida
      String part1 = entrada.GraphInit();
      String part2 = entrada.GraphColumna();
      String part3 = entrada.GraphFilas();
      String todo = entrada.CreateDot(part1, part2, part3);
      entrada.CrearEstructuraImg(todo,"Imagen-amplitud"+idImagen);
      entrada.ConvertimosGraphvizImg("Imagen-amplitud"+idImagen,"Imagen-aplitud"+idImagen);
      // ingresamos en el avl y lo graficamos
      AVLglobal.add(idImagen,arbolporAmplitud);
      String combo1 = AVLglobal.InOrderGraph(AVLglobal.raiz);
      String combo2 = AVLglobal.textoGraph(AVLglobal.raiz);
      String combinado = AVLglobal.ArmarEstructura(combo1, combo2);
      AVLglobal.CrearEstructura(combinado,"AVL-Imagen-amplitud"+idImagen);
      AVLglobal.ConvertimosGraphviz("AVL-Imagen-amplitud"+idImagen,"AVL-Imagen-amplitud"+idImagen);
     
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.ButtonGroup Grupo1;
    private javax.swing.JRadioButton btnradioInOrden;
    private javax.swing.JRadioButton btnradioPostOrden;
    private javax.swing.JRadioButton btnradiopreOrden;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTree jTree1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JTextArea txtAreaSalida;
    private javax.swing.JTextField txtIdImagen;
    private javax.swing.JTextField txtIdImg;
    private javax.swing.JTextField txtNumeroCapas;
    private javax.swing.JTextField txtOriginal;
    private javax.swing.JTextField txtSalida;
    private javax.swing.JTextField txtfileruta;
    private javax.swing.JTextField txtidAmplitud;
    private javax.swing.JTextField txtidCapa;
    private javax.swing.JTextField txtingresoid;
    // End of variables declaration//GEN-END:variables
}
